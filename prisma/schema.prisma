generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Event {
  id          Int               @id(map: "event_pkey") @default(autoincrement())
  name        String               @db.VarChar(100)
  description String?
  location    Int
  owner       Int
  attendance  Int[]                @default([])
  activity    String               @db.VarChar(100)
  createdAt   DateTime             @default(now()) @db.Timestamp(6)
  startTime   DateTime             @db.Timetz()
  User        User                 @relation(fields: [owner], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "owner_fkey")
  Location    Location             @relation(fields: [location], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "location_fkey")
}

model User {
  id       Int     @id(map: "user_pkey") @default(autoincrement())
  username String  @db.VarChar(20)
  friends  Int[]   @default([])
  city     String? @db.VarChar(255)
  state    String? @db.VarChar(255)
  country  String? @db.VarChar(50)
  eventsCreated Int[] @default([])
  eventsAttended Int[] @default([])
  Event    Event[]
}

model Location {
  id      Int    @id(map: "location_pkey") @default(autoincrement())
  lat     Float
  lon     Float
  Event   Event[]
}
